#!/usr/bin/env -S bash -c 'make -j16 -f run-clerk -k all 2>/dev/null'
# -*- mode: makefile; -*-
####################################################################################################
# Copyright (c) 2023 Bahman Movaqar
#
# This file is part of lemmy-clerk.
# lemmy-clerk is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# lemmy-clerk is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with lemmy-clerk.
# If not, see <https://www.gnu.org/licenses/>.
####################################################################################################

SHELL := /usr/bin/env -S bash -o pipefail
.DEFAULT_GOAL := all
ROOT := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
include bmakelib/bmakelib.mk

####################################################################################################
# Lemmy API version
####################################################################################################

LEMMY_API_VERSION ?= v3
lemmy.api.version := $(LEMMY_API_VERSION)

####################################################################################################
# Lemmy instances (FQDN)
####################################################################################################

lemmy.instances  = enterprise.lemmy.ml
lemmy.instances += ds9.lemmy.ml
lemmy.instances += voyager.lemmy.ml
lemmy.instances += lemmy.ml
lemmy.instances += lemmy.world

####################################################################################################
# lemmy.instance.generate-target INSTANCE-FQDN
####################################################################################################

define lemmy.instance.generate-target

.PHONY : $(1)

$(1) : lemmy.api.getPosts( $(1) )
$(1) : lemmy.api.getComments( $(1) )
$(1) : lemmy.api.getCommunities( $(1) )
$(1) : lemmy.web.getLandingPage( $(1) )

endef

####################################################################################################
# lemmy.api.base-url INSTANCE-FQDN
#####################################################################################################

define lemmy.api.base-url
https://$(1)/api/$(lemmy.api.version)
endef

####################################################################################################
# lemmy.web.base-url INSTANCE-FQDN
#####################################################################################################

define lemmy.web.base-url
https://$(1)
endef

####################################################################################################
# curl-with-timestamp URL ID
####################################################################################################

define curl-with-timestamp

export ts=$$(TZ=UTC date +'%Y-%m-%d-%H-%M-%S') 							\
&& export cout=( $$(curl									\
			--silent								\
			--fail									\
			--request GET 								\
			--stderr /dev/null							\
			--write-out '%{url.host} $(2) %{response_code} %{time_total}'		\
			--output /dev/null							\
			'$(1)') ) 								\
&& printf '%-24s %-40s %-14s %-7s %s\n' $$ts $${cout[0]} $${cout[1]} $${cout[2]} $${cout[3]}
endef

####################################################################################################
# Request a single post from the instance and measure the time.
####################################################################################################

.PHONY : lemmy.api.getPosts(%)

lemmy.api.getPosts(%) : bmakelib.error-if-blank( lemmy.api.version )
lemmy.api.getPosts(%) : base-url = $(call lemmy.api.base-url,$(*))
lemmy.api.getPosts(%) :
	@$(call curl-with-timestamp,$(base-url)/post/list?limit=1,/post)

####################################################################################################
# Request a single comment from the instance and measure the time.
####################################################################################################

.PHONY : lemmy.api.getComments(%)

lemmy.api.getComments(%) : bmakelib.error-if-blank( lemmy.api.version )
lemmy.api.getComments(%) : base-url = $(call lemmy.api.base-url,$(*))
lemmy.api.getComments(%) :
	@$(call curl-with-timestamp,$(base-url)/comment/list?limit=1,/comment)

####################################################################################################
# Request a single community from the instance and measure the time.
####################################################################################################

.PHONY : lemmy.api.getCommunities(%)

lemmy.api.getCommunities(%) : bmakelib.error-if-blank( lemmy.api.version )
lemmy.api.getCommunities(%) : base-url = $(call lemmy.api.base-url,$(*))
lemmy.api.getCommunities(%) :
	@$(call curl-with-timestamp,$(base-url)/community/list?limit=1,/community)

####################################################################################################
# Request the landing page from the instance and measure the time.
####################################################################################################

.PHONY : lemmy.web.getLandingPage(%)

lemmy.web.getLandingPage(%) : bmakelib.error-if-blank( lemmy.api.version )
lemmy.web.getLandingPage(%) : base-url = $(call lemmy.web.base-url,$(*))
lemmy.web.getLandingPage(%) :
	@$(call curl-with-timestamp,$(base-url)/,/)

####################################################################################################
# Print the result table header to stdout
####################################################################################################

.PHONY : print-table-header

print-table-header :
	@printf '%-24s %-40s %-14s %-7s %s\n' \
		'TIMESTAMP (UTC)' \
		'INSTANCE' \
		'ENDPOINT' \
		'STAT' \
		'DURATION' \
	&& printf '%.0s-' {1..100} \
	&& echo



####################################################################################################
# Generate targets corresponding to `lemmy.instances`
####################################################################################################

$(foreach \
	instance,\
	$(lemmy.instances),\
	$(eval $(call lemmy.instance.generate-target,$(instance))))

####################################################################################################

.PHONY : all

all : print-table-header
all : $(lemmy.instances)
