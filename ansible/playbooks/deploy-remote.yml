---
- name: Deploy lemmy-meter
  hosts: all

  tasks:
    - ansible.builtin.assert:
        that:
          - lemmy_meter_archive_path
          - lemmy_meter_command_path
          - lemmy_meter_cluster_env

    - name: Ensure ~/bin exists
      ansible.builtin.file:
        path: "${HOME}/bin"
        state: directory

    - name: Copy lemmy-meter command
      ansible.builtin.copy:
        src: "{{ lemmy_meter_command_path }}"
        dest: "${HOME}/bin/lemmy-meter"
        remote_src: false
        mode: "u+x"
      register: _result
      changed_when: _result is success

    - name: Check if there is a previous installation
      ansible.builtin.stat:
        path: "${HOME}/var"
      register: previous_instalation

    - name: Create a temp directory
      when: previous_instalation.stat.exists
      ansible.builtin.tempfile:
        state: directory
      register: _tempdir

    - name: Stop the cluster
      when: previous_instalation.stat.exists
      ansible.builtin.command:
        cmd: >-
          ${HOME}/bin/lemmy-meter cluster.env={{ lemmy_meter_cluster_env }} down
      register: _result
      changed_when: _result is success

    - name: Backup grafana.db
      when: previous_instalation.stat.exists
      ansible.builtin.copy:
        src: "${HOME}/var/grafana/grafana.db"
        dest: "{{ _tempdir.path }}/grafana.db.backup"
        remote_src: true
      register: _result
      changed_when: _result is success

    - name: Extract the archive
      ansible.builtin.unarchive:
        src: "{{ lemmy_meter_archive_path }}"
        dest: "${HOME}"
      register: _result
      changed_when: _result is success

    - name: Restore grafana.db
      when: previous_instalation.stat.exists
      ansible.builtin.copy:
        src: "{{ _tempdir.path }}/grafana.db.backup"
        dest: "${HOME}/var/grafana/grafana.db"
        force: true
        backup: true
        remote_src: true
      register: _result
      changed_when: _result is success

    - name: Start the cluster
      ansible.builtin.command:
        cmd: >-
          ${HOME}/bin/lemmy-meter cluster.env={{ lemmy_meter_cluster_env }} up
      register: _result
      changed_when: _result is success
