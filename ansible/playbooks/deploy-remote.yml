---
- name: Deploy lemmy-meter
  hosts: all

  tasks:
    - ansible.builtin.assert:
        that:
          - lemmy_meter_archive_path
          - lemmy_meter_command_path
          - lemmy_meter_cluster_env
          - lemmy_meter_cluster_stop
          - lemmy_meter_cluster_restart

    - name: Include environment-specific variables
      ansible.builtin.include_vars:
        file: "../{{ lemmy_meter_cluster_env }}-vars.vault.yml"

    - name: Ensure ~/bin exists
      ansible.builtin.file:
        path: "${HOME}/bin"
        state: directory

    - name: Copy lemmy-meter command
      ansible.builtin.copy:
        src: "{{ lemmy_meter_command_path }}"
        dest: "${HOME}/bin/lemmy-meter"
        remote_src: false
        mode: "u+x"
      register: _result
      changed_when: _result is success

    - name: Stop the cluster
      when: lemmy_meter_cluster_stop | bool
      block:
        - name: "[Stop the cluster] Check if there is a previous installation"
          ansible.builtin.stat:
            path: "${HOME}/var"
          register: previous_instalation

        - name: "[Stop the cluster] Stop the cluster"
          when: previous_instalation.stat.exists
          ansible.builtin.command:
            cmd: >-
              ${HOME}/bin/lemmy-meter
                cluster.env={{ lemmy_meter_cluster_env }}
                down
          register: _result
          changed_when: _result is success

    - name: Extract the archive
      ansible.builtin.unarchive:
        src: "{{ lemmy_meter_archive_path }}"
        dest: "${HOME}"
      register: _result
      changed_when: _result is success

    ################################################################################

    - name: Populate smtp parameters
      block:
        - name: "[smtp config] SMTP_USER"
          ansible.builtin.lineinfile:
            path: "${HOME}/var/config/{{ lemmy_meter_cluster_env }}.conf"
            regexp: "^SMTP_USER="
            insertafter: EOF
            line: "SMTP_USER={{ SMTP_USER }}"
            create: true
            state: present

        - name: "[smtp config] SMTP_PASSWORD"
          ansible.builtin.lineinfile:
            path: "${HOME}/var/config/{{ lemmy_meter_cluster_env }}.conf"
            regexp: "^SMTP_PASSWORD="
            insertafter: EOF
            line: "SMTP_PASSWORD={{ SMTP_PASSWORD }}"
            create: true
            state: present

    - name: Populate LMDP bridge parameters
      block:
        - name: "[LMDP config] LMDP_NTFY_USERNAME"
          ansible.builtin.lineinfile:
            path: "${HOME}/var/config/{{ lemmy_meter_cluster_env }}.conf"
            regexp: "^LMDP_NTFY_USERNAME="
            insertafter: EOF
            line: "LMDP_NTFY_USERNAME={{ LMDP_NTFY_USERNAME }}"
            create: true
            state: present

        - name: "[LMDP config] LMDP_NTFY_PASSWORD"
          ansible.builtin.lineinfile:
            path: "${HOME}/var/config/{{ lemmy_meter_cluster_env }}.conf"
            regexp: "^LMDP_NTFY_PASSWORDD="
            insertafter: EOF
            line: "LMDP_NTFY_PASSWORD={{ LMDP_NTFY_PASSWORD }}"
            create: true
            state: present

    - name: Populate Alertmanager config
      block:
        - name: "[alertmanager config] AM_CATCHALL_DISCORD_WEBHOOK"
          ansible.builtin.replace:
            path: "${HOME}/var/alertmanager/alertmanager.yml"
            regexp: '\${AM_CATCHALL_DISCORD_WEBHOOK}'
            replace: "{{ AM_CATCHALL_DISCORD_WEBHOOK }}"

    ################################################################################

    - name: Start the cluster
      when: lemmy_meter_cluster_restart | bool
      ansible.builtin.command:
        cmd: >-
          ${HOME}/bin/lemmy-meter cluster.env={{ lemmy_meter_cluster_env }} up
      register: _result
      changed_when: _result is success
